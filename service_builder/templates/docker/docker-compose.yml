version: "3.1"

services:

  postgres_{{ name_project }}:
    container_name: postgres_{{ name_project }}
    healthcheck:
      test: "pg_isready -h localhost -p 5432 -q -U postgres"
      interval: 3s
      timeout: 5s
      retries: 5
    image: postgres:10.4-alpine
    environment:
      POSTGRES_DB: {{ name_project }}
      POSTGRES_USER: root
      POSTGRES_PASSWORD: root
    volumes:
      - /var/lib/postgresql/data/
    ports:
      - "5432:5432"
    restart: always

  {{ name_project }}:
    build:
      context: .
      dockerfile: Dockerfile
    entrypoint: bash /code/docker-entrypoint-dev.sh
    container_name: {{ name_project }}
    image: {{ name_project }}
    volumes:
      - .:/code
      - static-content:/static
    ports:
      - "8080:80"
    depends_on:
      - postgres_{{ name_project }}
    environment:
      ALLOWED_HOSTS: localhost,127.0.0.1
      CORS_ORIGIN_WHITELIST: localhost,127.0.0.1
      DATABASE_ENGINE: "postgresql"
      DATABASE_NAME: "{{ name_project }}"
      DATABASE_USER: "root"
      DATABASE_PASSWORD: "root"
      DATABASE_HOST: "postgres_{{ name_project }}"
      DATABASE_PORT: "5432"
      DEBUG: "True"
      JWT_PUBLIC_KEY_RSA_ACTIVITYAPI: |-
        -----BEGIN PUBLIC KEY-----
        MFwwDQYJKoZIhvcNAQEBBQADSwAwSAJBALFc9NFZaOaSwUMPNektbtJqEjYZ6IRB
        qhqvJu1hKPYn9HYd75c0gIDYHJ9lb7QwQvg44aO27104rDK0xSstzL0CAwEAAQ==
        -----END PUBLIC KEY-----
      STATIC_ROOT: /static/
      STATIC_URL: http://localhost:8000/

  nginx_{{ name_project }}:
    image: nginx:stable-alpine
    container_name: nginx_{{ name_project }}
    ports:
      - "8000:80"
    volumes:
      - static-content:/usr/share/nginx/html/
    depends_on:
      - {{ name_project }}
    command: [nginx, '-g', 'daemon off;']

volumes:
  static-content:
